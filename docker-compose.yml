version: '3'

services:
  student:
    container_name: student_app
    build: ./student-service
    image: student_app:latest
    command: bash -c "python main.py"
    ports:
      - "5004:80"
    depends_on:
      student-db:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: "curl --fail http://localhost/health || exit 1"
      interval: 10s
      timeout: 5s
      retries: 3

  student-db:
    container_name: "student-db"
    image: postgres:13.4
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: students
    volumes:
      - student-db:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: "pg_isready -U admin -h localhost -d students"
      interval: 10s
      timeout: 5s
      retries: 3

  subject:
    container_name: subject_app
    build: ./subject-service
    image: subject_app:latest
    command: bash -c "python main.py"
    ports:
      - "5001:80"
    depends_on:
      subject-db:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: "curl --fail http://localhost/health || exit 1"
      interval: 10s
      timeout: 5s
      retries: 3

  subject-db:
    container_name: "subject-db"
    image: postgres:13.4
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: subjects
    volumes:
      - subject-db:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: "pg_isready -U admin -h localhost -d subjects"
      interval: 10s
      timeout: 5s
      retries: 3

  enrollment:
    container_name: "enrollment-app"
    build: ./enrollment-service
    image: enrollment_app:latest
    command: bash -c "python main.py"
    ports:
      - "5002:80"
    depends_on:
      enrollment-db:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: "curl --fail http://localhost/health || exit 1"
      interval: 10s
      timeout: 5s
      retries: 3

  enrollment-db:
    container_name: "enrollment-db"
    image: postgres:13.4
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: enrollments
    volumes:
      - enrollment-db:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: "pg_isready -U admin -h localhost -d enrollments"
      interval: 10s
      timeout: 5s
      retries: 3

  auth:
    container_name: "auth-app"
    build: ./auth-service
    image: auth_app:latest
    command: bash -c "python main.py"
    ports:
      - "5003:80"
    depends_on:
      auth-db:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: "curl --fail http://localhost/health || exit 1"
      interval: 10s
      timeout: 5s
      retries: 3

  auth-db:
    container_name: "auth-db"
    image: postgres:13.4
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: auth
    volumes:
      - auth-db:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: "pg_isready -U admin -h localhost -d auth"
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  student-db:
  subject-db:
  enrollment-db:
  auth-db:


networks:
  app-network:
    name: app-network
